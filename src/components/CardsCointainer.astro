---
import type { Form, FormsCollection } from "../utils/types";
import Card from "./Card.astro";

interface Props {
	[data: string]: FormsCollection;
}

const { data } = Astro.props;
const arrData: Array<Form> = Object.values(data);
---

<swiper-container id="cards-container" 
    class="mySwiper"
    pagination="true" 
    effect="coverflow"
    
    navigation="true" 
    loop="true"
    centered-slides="true"
    slides-per-view="2" coverflow-effect-slide-shadows="true"
>
    {
        arrData.map(el => {
            return <Card title={el?.title && el.title}
                questions=
                    {el?.questions && el.questions}
                name={el?.cardName && el.cardName}
            />
        })
    }
    
    <slot />
</swiper-container>


<script>
    const $ = (selector: string): HTMLElement | null => document.querySelector(selector);
	const formInput = (arr: HTMLInputElement[]): HTMLInputElement[] => {
		return arr.filter(el => el.type === "radio" && el.checked);
	}
    const submitForm = (e: Event) => {
		e.preventDefault();

		const form = e.target as HTMLFormElement;
		const formElements = Array.from(form.elements) as HTMLInputElement[];
        const formInputs = formInput(formElements);
        
        const formValues = {
            nameCard: formInputs[0].name.split("-")[1],
            values: formInputs.map(el => {
                return {
                    question: el.name.split("-")[0],
                    value: el.value,
                }
            }),
        };
        console.log(formValues);
        return formValues;
	}
    
    const form = $("#cards-container");
	form?.addEventListener("submit", submitForm);		
</script>